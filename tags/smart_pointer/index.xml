<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>smart_pointer on Monsooooon</title><link>https://monsooooon.github.io/tags/smart_pointer/</link><description>Recent content in smart_pointer on Monsooooon</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 11 Feb 2022 09:38:45 +0800</lastBuildDate><atom:link href="https://monsooooon.github.io/tags/smart_pointer/index.xml" rel="self" type="application/rss+xml"/><item><title>Effective_Modern_Cpp_Item_21</title><link>https://monsooooon.github.io/posts/effective_modern_cpp_item_21/</link><pubDate>Fri, 11 Feb 2022 09:38:45 +0800</pubDate><guid>https://monsooooon.github.io/posts/effective_modern_cpp_item_21/</guid><description>Item 21: Prefer std::make_unique and std::make_shared to direct use of new.
three make functions
std::make_unique std::make_shared std::allocate_shared how to use? // deprecated: std::unique_ptr&amp;lt;Widget&amp;gt; upw(new Widget); auto upw(std::make_unique&amp;lt;Widget&amp;gt;()); // deprecated: std::shared_ptr&amp;lt;Widget&amp;gt; spw(new Widget); auto spw(std::make_shared&amp;lt;Widget&amp;gt;()); why use? exception safety consider the following code:
processWidget(std::shared_ptr&amp;lt;Widget&amp;gt;(new Widget), computePriority()); possible execution order (depends on compiler)
new Widget computerPriority &amp;ndash;&amp;gt; cause exception!! build shared_ptr if the second step throws an exception, the new-ed Widget will NEVER be deleted.</description></item></channel></rss>